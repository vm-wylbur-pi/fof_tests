# This file contains a structure list of audio files that the experiences (games")
# run through the GSA use. These files should be loaded onto all the flowers.
#
# All paths here are relative to the root folder of the SD filesystem.
#
# Schema:
#  At the top level, this is a dict keyed by game name. The structure within each
#  game is not specified and all that matters is that the file matches what that
#  game code expects.

Fairy:
  # A dict from fairy name to the set of giggle sounds for each fairy.
  # Any one fairy instance is a randomly chosen fairy and will randomly choose
  # giggle sounds only from under that fairy name.
  Mikayla:
    - fairy/MikaylaCantCatch.wav
    - fairy/MikaylaGiggle1.wav
    - fairy/MikaylaGiggle2.wav
    - fairy/MikaylaGiggle3.wav
    - fairy/MikaylaGiggle4.wav
    - fairy/MikaylaGiggle5.wav
    - fairy/MikaylaGiggle6.wav
    - fairy/MikaylaGiggle7.wav
    - fairy/MikaylaOverHere1.wav
    - fairy/MikaylaOverHere2.wav
    - fairy/MikaylaOverHere_DOUBLE.wav
    - fairy/MikaylaThisWay1.wav
    - fairy/MikaylaThisWay_DOUBLE.wav
  Talia:
    - fairy/TaliaCantCatch1.wav
    - fairy/TaliaCmonThisWay.wav
    - fairy/TaliaGiggle1.wav
    - fairy/TaliaGiggle2.wav
    - fairy/TaliaGiggle3.wav
    - fairy/TaliaGiggle4.wav
    - fairy/TaliaOverHere.wav
    - fairy/TaliaOverHere2.wav

RollCall:
  # Each flower will play one of these at random when called.
  - wave/Hi1.wav
  - wave/Hi2.wav
  - wave/Hi3.wav
  - wave/Hi4.wav
  - wave/Hi5.wav
  - wave/Hi6.wav
  - wave/yeah2.wav
  - wave/yeah6.wav
  - wave/yeahUP3.wav
  - fairy/TaliaOverHere.wav
  - fairy/MikaylaOverHere1.wav
  - fairy/MikaylaOverHere2.wav

# A group of 6 flowers is chosen somewhere in the field. One of these lists is chosen randomly. One
# flower sings the first file in the list, then others follow one at a time singing the others.
# Each overlaps with the others a bit.
ChorusCircle:
  # The order is intentional.  They must start with sound #1, and they should
  # then proceed in order, except that the longest track must come last.
  aww: [wave2/aww1.wav, wave2/aww2.wav, wave2/aww3.wav, wave2/aww4.wav, wave2/aww5.wav, wave2/aww6.wav]
  mmm: [wave2/mmm1.wav, wave2/mmm2.wav, wave2/mmm3.wav, wave2/mmm4.wav, wave2/mmm5.wav, wave2/mmm6.wav]
  ooo: [wave2/ooo1.wav, wave2/ooo2.wav, wave2/ooo3.wav, wave2/ooo5.wav, wave2/ooo6.wav, wave2/ooo4.wav]
  woo: [wave2/woo1.wav, wave2/woo2.wav, wave2/woo3.wav, wave2/woo4.wav, wave2/woo5.wav, wave2/woo6.wav]
  ooUP: [wave2/ooUP1.wav, wave2/ooUP3.wav, wave2/ooUP4.wav, wave2/ooUP5.wav, wave2/ooUP6.wav, wave2/ooUP2.wav]
  whoa: [wave2/whoa1.wav, wave2/whoa2.wav, wave2/whoa3.wav, wave2/whoa5.wav, wave2/whoa6.wav, wave2/whoa4.wav]

Wave:
  # These are the sounds that play as each wave of color arrives at a flower.
  #
  # Nat specified that each of these works together as an alternating pair.
  # Each string here must appear as a key in the Syllables dict below
  SyllablePairs:
    - [Am, Am]
    - [Em, Em]
    - [G, G]

  Syllables:
    # Am, Em, and Gm are the nice-sounding musical mallets.  We want to use
    # these for most waves.
    #
    # The important parts (the Glock, Marimba, and Vibes) each appear twice
    # in each list, so they end up played on twice as many flowers, so that
    # sound more prominent in the mix.
    Am:
      - mallets/Am_Balafon_Enote.wav
      - mallets/Am_Bells_Cnote.wav
      - mallets/Am_Kalimba_hiAnote.wav
      # - mallets/Am_Glock_Gnote.wav
      # - mallets/Am_Glock_Gnote.wav
      - mallets/Am_Marimba_Anote.wav
      - mallets/Am_Marimba_Anote.wav
      - mallets/Am_vibes_Cnote.wav
      - mallets/Am_vibes_Cnote.wav
    Em:
      - mallets/Em_balafon_Enote.wav
      - mallets/Em_bells_Cnote.wav
      - mallets/Em_kalimba_Gnote.wav
      # - mallets/Em_glock_Dnote.wav
      # - mallets/Em_glock_Dnote.wav
      - mallets/Em_marimba_Enote.wav
      - mallets/Em_marimba_Enote.wav
      - mallets/Em_vibes_Dnote.wav
      - mallets/Em_vibes_Dnote.wav
    G:
      - mallets/G_balafon_Dnote.wav
      - mallets/G_bells_Cnote.wav
      - mallets/G_kalimba_Gnote.wav
      # - mallets/G_glock_Enote.wav
      # - mallets/G_glock_Enote.wav
      - mallets/G_marimba_Gnote.wav
      - mallets/G_marimba_Gnote.wav
      - mallets/G_vibes_Enote.wav
      - mallets/G_vibes_Enote.wav

    # These are the vocal sounds.  Their file level is higher, they
    # work at lower volumes.
    aww: [wave2/aww1.wav, wave2/aww2.wav, wave2/aww3.wav, wave2/aww4.wav, wave2/aww5.wav, wave2/aww6.wav]
    mmm: [wave2/mmm1.wav, wave2/mmm2.wav, wave2/mmm3.wav, wave2/mmm4.wav, wave2/mmm5.wav, wave2/mmm6.wav]
    ooo: [wave2/ooo1.wav, wave2/ooo2.wav, wave2/ooo3.wav, wave2/ooo4.wav, wave2/ooo5.wav, wave2/ooo6.wav]
    woo: [wave2/woo1.wav, wave2/woo2.wav, wave2/woo3.wav, wave2/woo4.wav, wave2/woo5.wav, wave2/woo6.wav]
    ooUP: [wave2/ooUP1.wav, wave2/ooUP2.wav, wave2/ooUP3.wav, wave2/ooUP4.wav, wave2/ooUP5.wav, wave2/ooUP6.wav]
    whoa: [wave2/whoa1.wav, wave2/whoa2.wav, wave2/whoa3.wav, wave2/whoa4.wav, wave2/whoa5.wav, wave2/whoa6.wav]

# Every now and then, two adjacent flowers will be picked randomly, and one
# of the following pairs of sound files will be picked randomly. Then each
# flower plays one of the two sounds. The files are set up so that each one
# is one of the two sides of a gossipy conversation.
Gossip:
  D1: [gossip/Gossip_D1_A_J_S.wav, gossip/Gossip_D1_B_J_S.wav]
  D2: [gossip/Gossip_D2_A_S_N.wav, gossip/Gossip_D2_B_S_N.wav]
  D3: [gossip/Gossip_D3_A_J_N.wav, gossip/Gossip_D3_B_J_N.wav]
  D4: [gossip/Gossip_D4_A_J_S.wav, gossip/Gossip_D4_B_J_S.wav]
  # Skipped D5, since it has 3 parts, and I needed to save time coding.
  D6: [gossip/Gossip_D6_french_A.wav, gossip/Gossip_D6_french_B.wav]
  D7: [gossip/Gossip_D7_garbled_A.wav, gossip/Gossip_D7_garbled_B.wav]
  D8: [gossip/Gossip_D8_garbled_A.wav, gossip/Gossip_D8_garbled_B.wav]

RainStorm:
  crickets: nature/crickets.wav
  lightRain: nature/lightRain.wav
  frogs: nature/FrogSounds.wav
  birds: nature/birds.wav
